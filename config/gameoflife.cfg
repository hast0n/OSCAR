# -----------------------------------------------------------------------------
# LifeGame : Conway's Game of Life
#            http://en.wikipedia.org/wiki/Conway's_Game_of_Life
#
# Description :
# - LifeGame is based on 2-state mineral agents: 'live' and 'dead'
# - 'live' agents generate a 'life' field on their 8 neighbouring cells
# - 'dead' and 'live' agents have a 'neighbour' sensor for this 'life' field
# -----------------------------------------------------------------------------

world 17 18 #000

mineral dead #000
var neighbour               # default: InitValue=0 TimeStepValue=0
status neighbour < 3 dead   # status lines are evaluated in given order
status neighbour < 4 live   # 'dead' -> 'live' only when 'neighbour' == 3
status neighbour > 3 dead
sensor neighbour life 1     # 'life' field is scale by 1 and stored in 'neighbour'

mineral live #FFF
var life 2                  # default: TimeStepValue=0
var neighbour               # default: InitValue=0 TimeStepValue=0
status neighbour < 2 dead
status neighbour < 4 live   # 'live' -> 'live' only when 'neighbour' == 2 or 3
status neighbour > 3 dead
field life -1
sensor neighbour life 1

# initial configuration for the pentadecathlon oscillator (period 15)
agent live (8,4) (8,5) (7,6) (9,6) (8,7) (8,8)
agent live (8,9) (8,10) (7,11) (9,11) (8,12) (8,13)
agent dead fill
# -----------------------------------------------------------------------------

# initial configuration for the small glider
# agent live (10,6) (10,7) (10,8) (9,8) (8,7)

# initial configuration for flower explosion turning into gliders
# agent live (15,12) (14,11) (14,10) (15,9) (16,11) (16,10) (16,9)
# agent live (12,15) () () () () () ()
# agent live (18,15) () () () () () ()
# agent live (15,18) () () () () () ()